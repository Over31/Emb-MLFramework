# Base image with Miniconda
FROM continuumio/miniconda3

# Set environment variables
ENV PATH /opt/conda/envs/featherml_env/bin:$PATH

# Copy the environment.yml if using conda as a base
COPY ./code/deployment/environment.yml /tmp/environment.yml

# Create Conda environment for FeatherML
RUN conda env create -f /tmp/environment.yml

# Activate the environment
SHELL ["conda", "run", "-n", "featherml_env", "/bin/bash", "-c"]

# Arguments to conditionally install specific frameworks
ARG INSTALL_TENSORFLOW=false
ARG INSTALL_PYTORCH=false
ARG INSTALL_ONNX=false
ARG INSTALL_SKLEARN=false
ARG INSTALL_XGBOOST=false
ARG INSTALL_CATBOOST=false
ARG INSTALL_LIGHTGBM=false
ARG INSTALL_TFLITE=false

# Install TensorFlow if specified
RUN if [ "$INSTALL_TENSORFLOW" = "true" ]; then conda install -n featherml_env -c conda-forge tensorflow; fi

# Install PyTorch if specified
RUN if [ "$INSTALL_PYTORCH" = "true" ]; then conda install -n featherml_env -c conda-forge pytorch torchvision torchaudio; fi

# Install ONNX if specified
RUN if [ "$INSTALL_ONNX" = "true" ]; then conda install -n featherml_env -c conda-forge onnx onnxruntime; fi

# Install scikit-learn if specified
RUN if [ "$INSTALL_SKLEARN" = "true" ]; then conda install -n featherml_env -c conda-forge scikit-learn; fi

# Install XGBoost if specified
RUN if [ "$INSTALL_XGBOOST" = "true" ]; then conda install -n featherml_env -c conda-forge xgboost; fi

# Install CatBoost if specified
RUN if [ "$INSTALL_CATBOOST" = "true" ]; then conda install -n featherml_env -c conda-forge catboost; fi

# Install LightGBM if specified
RUN if [ "$INSTALL_LIGHTGBM" = "true" ]; then conda install -n featherml_env -c conda-forge lightgbm; fi

# Install TensorFlow Lite if specified (via pip)
RUN if [ "$INSTALL_TFLITE" = "true" ]; then pip install tflite-runtime; fi

# Set the workdir and copy the project files
WORKDIR /app
COPY ./code/framework .

# Expose port for API
EXPOSE 5000

# Default command
CMD ["/bin/bash"]